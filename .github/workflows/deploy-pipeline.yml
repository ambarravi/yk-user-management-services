name: Deploy User Management Services

on:
  push:
    branches:
      - dev
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function:
          - yk-sign-up-trigger
          - yk-update-role-api
          - yk-get-city-list
          - yk-get-college-list
          - yk-m-update-role-api
          - yk-submit-profile
          - yk-get-profile-by-id
          - yk-get-category-list
          - yk-submit-event
          - yk-get-event-list-by-orgid
          - yk-fetch-event-by-id
          - yk-get-all-event-by-filter
          - yk-update-event-status
          - yk-get-all-event-by-criteria

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.ref == 'refs/heads/main' && 'us-west-2' || 'eu-west-1' }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          cd src/${{ matrix.function }}
          npm install --production

      # Step 4: Zip Lambda function code
      - name: Zip Lambda function code
        run: |
          cd src/${{ matrix.function }}
          zip -r function.zip . -x "*.yml"

      # Step 5: Upload zipped Lambda function to S3
      - name: Upload Lambda function code to S3
        run: |
          aws s3 cp src/${{ matrix.function }}/function.zip s3://yk-zips/${{ matrix.function }}/function.zip \
            --region ${{ github.ref == 'refs/heads/main' && 'us-west-2' || 'eu-west-1' }}

      # Step 6: Deploy using CloudFormation
      - name: Run CloudFormation for Lambda
        run: |
          aws cloudformation deploy \
            --template-file src/${{ matrix.function }}/cloudformation/lambda-setup.yml \
            --stack-name user-management-${{ matrix.function }}-stack \
            --parameter-overrides \
              StageName=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }} \
              Env=${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }} \
              ApiGatewayRestApiId=${{ github.ref == 'refs/heads/main' && '27sqbwaad7' || '27sqbwaad7' }} \
              ApiGatewayRootResourceId=${{ github.ref == 'refs/heads/main' && '78iwchywp5' || '78iwchywp5' }} \
            --capabilities CAPABILITY_NAMED_IAM
      - name: Wait for resources to be available
        run: sleep 30
      # Step 7: Update Lambda function code
      - name: Update Lambda function code
        run: |
          aws lambda update-function-code \
            --function-name ${{ matrix.function }} \
            --s3-bucket yk-zips \
            --s3-key ${{ matrix.function }}/function.zip \
            --region ${{ github.ref == 'refs/heads/main' && 'us-west-2' || 'eu-west-1' }}
