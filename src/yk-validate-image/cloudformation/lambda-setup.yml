AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ApiGatewayRestApiId:
    Type: String
    Description: The REST API ID for API Gateway deployment
  ApiGatewayRootResourceId:
    Type: String
    Description: The Root Resource ID for API Gateway deployment
  StageName:
    Type: String
    Description: The stage name (e.g., dev, prod)
    AllowedValues: [dev, prod]
  CognitoAuthorizerId:
    Type: String
    Description: The CognitoAuthorizerId Resource ID for API Gateway Authorization
  SenderEmail:
    Type: String
    Description: Verified SES sender email address
    Default: "support@tikties.com"

Mappings:
  BucketNameMap:
    dev:
      Bucket: tikto-orgnizer-dev
    prod:
      Bucket: tikto-orgnizer-prod

Resources:
  YKValidateImageLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub yk-validate-image-${StageName}
      Handler: index.handler
      Runtime: nodejs20.x
      Timeout: 900
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SenderEmail
          EVENT_TABLE: "EventDetails"
          ORGANIZER_TABLE: "Organizer"
          NOTIFICATION_LOGS_TABLE: "NotificationLogs"
      MemorySize: 256
      Code:
        ZipFile: |
          // Placeholder: Upload actual code via ZIP file
          export const handler = async () => {
            return { statusCode: 200, body: "Placeholder" };
          };
      Role: !GetAtt YKValidateImageLambdaExecutionRole.Arn
      TracingConfig:
        Mode: Active

  YKValidateImageLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: YKValidateImageLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/EventDetails
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/EventDetails/index/*
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Organizer
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/NotificationLogs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/yk-validate-image-${StageName}:*
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BucketNameMap.${StageName}.Bucket}/*
                  - !Sub arn:aws:s3:::${BucketNameMap.${StageName}.Bucket}
              - Effect: Allow
                Action:
                  - rekognition:DetectModerationLabels
                Resource: "*"
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendBulkTemplatedEmail
                Resource: "*"
                Condition:
                  StringEquals:
                    ses:FromAddress: !Ref SenderEmail

  ValidateImageS3Trigger:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref YKValidateImageLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${BucketNameMap.${StageName}.Bucket}

Outputs:
  YKValidateImageLambdaArn:
    Description: ARN of the Image Validation Lambda function
    Value: !GetAtt YKValidateImageLambda.Arn

  BucketName:
    Description: Stage-specific bucket name
    Value: !FindInMap [BucketNameMap, !Ref StageName, Bucket]
