AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Env:
    Type: String
    Default: Development
    AllowedValues:
      - Development
      - Production

Mappings:
  EnvToResources:
    Development:
      ApiGatewayId: 27sqbwaad7
      UserPoolId: eu-west-1_hgUDdjyRr
      Stage: dev
      ApiGatewayRootResourceId: 78iwchywp5
    Production:
      ApiGatewayId: 27sqbwaad7
      UserPoolId: eu-west-1_hgUDdjyRr
      Stage: prod
      ApiGatewayRootResourceId: 78iwchywp5

Resources:
  RoleUpdateMobileTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: yk-m-update-role-api
      Handler: index.handler
      Runtime: nodejs20.x
      Timeout: 30
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              console.log("Placeholder Lambda Function");
              return { statusCode: 200, body: "Placeholder" };
          };
      Role: !GetAtt UpdateMobileRoleLambdaExecutionRole.Arn
      Environment:
        Variables:
          USERS_TABLE: "UsersTable"
          ROLE_CONFIG: "user,organizer"
          USER_POOL_ID: !FindInMap [EnvToResources, !Ref Env, UserPoolId]

  UpdateMobileRoleLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UpdateMobileRoleLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Allow DynamoDB UpdateItem operation
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/UsersTable

              # Allow writing logs to log groups
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              # Basic AWS Lambda service operations
              - Effect: Allow
                Action:
                  - cognito-idp:AdminUpdateUserAttributes
                Resource: "*"
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"
