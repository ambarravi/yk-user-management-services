AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ApiGatewayRestApiId:
    Type: String
    Description: The REST API ID for API Gateway deployment
  ApiGatewayRootResourceId:
    Type: String
    Description: The Root Resource ID for API Gateway deployment
  StageName:
    Type: String
    Description: The stage name (e.g., dev, prod)
Resources:
  GetCollegeListLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: yk-get-college-list
      Handler: index.handler
      Runtime: nodejs20.x
      Timeout: 20
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              console.log("Placeholder Lambda Function");
              return { statusCode: 200, body: "Placeholder" };
          };
      Role: !GetAtt GetCollegeLambdaExecutionRole.Arn
      TracingConfig:
        Mode: Active

  GetCollegeLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GetCollegeLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/College*
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/College/index/City-index
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetCollegeListLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApiId}/*

  GetCollegeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApiId
      ParentId: !Ref ApiGatewayRootResourceId
      PathPart: get-college

  GetCollegeGETMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApiId
      ResourceId: !Ref GetCollegeResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: !GetAtt [GetCollegeListLambda, Arn] }
        RequestParameters:
          integration.request.querystring.city: method.request.querystring.city
          integration.request.querystring.searchText: method.request.querystring.searchText
        RequestTemplates:
          application/json: |
            {
              "queryStringParameters": {
                "city": "$input.params('city')",
                "searchText": "$input.params('searchText')"
              }
            }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET, OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type, Authorization'"
      RequestParameters:
        method.request.querystring.city: false
        method.request.querystring.searchText: false
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  GetCollegeOPTIONSMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApiId
      ResourceId: !Ref GetCollegeResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{ "statusCode": 200 }'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET, OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type, Authorization'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true
